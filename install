#!/bin/bash
set -euxo pipefail

# Check for salt-call and move on if it exists.
if ! command -v salt-call 1>/dev/null; then
    if grep -q Ubuntu /etc/lsb-release; then
        # Ensure sudo exists.
        if [[ $(command -v sudo &>/dev/null; echo $?) -ne 0 ]]; then
            apt-get update
            apt-get install -y sudo
        fi

        # Ensure core utilities exist.
        sudo apt-get update
        sudo apt-get install -y \
            curl \
            git \
            gnupg \
            wget

        version=$(grep RELEASE /etc/lsb-release | cut -d"=" -f2)
        codename=$(grep CODENAME /etc/lsb-release | cut -d"=" -f2)
        if [[ "${version}" == "18.10" ]]; then
            sudo /bin/bash -c "DEBIAN_FRONTEND=noninteractive apt-get install -y salt-minion"
        else
            wget -O - "https://repo.saltstack.com/py3/ubuntu/${version}/amd64/latest/SALTSTACK-GPG-KEY.pub" | sudo apt-key add -
            sudo bash -c "echo deb http://repo.saltstack.com/py3/ubuntu/${version}/amd64/latest ${codename} main > /etc/apt/sources.list.d/saltstack.list"
            sudo apt-get update
            sudo /bin/bash -c "DEBIAN_FRONTEND=noninteractive apt-get install -y salt-minion"
        fi
    elif grep -q -E "(Arch|Manjaro)" /etc/issue; then
        sudo pacman --noconfirm --needed -Syu community/salt
    elif [[ $(uname) == Darwin ]]; then
        # There is a regression in 2018.3.3 documented here:
        # https://github.com/saltstack/salt/pull/51012
        #
        # I tried to use `brew install salt@2018.3.2` but that doesn't work, so
        # we're falling back on pip.
        if ! which pip3 >/dev/null; then
            sudo easy_install pip3
        fi
        sudo pip3 install salt==2018.3.3

        # I can't figure out how to pip install a specific git hash, so this
        # applies the fix listed here:
        # https://github.com/saltstack/salt/pull/51012/files
        install_path=$(pip3 show salt | grep Location | cut -d' ' -f2)
        target="${install_path}/salt/modules/cmdmod.py"
        sudo cp ./salt/bugfix-cmdmod.py "${target}"
    fi
fi

# Update the repository.
set +ue
if [[ "${CI}" != true ]]; then
    git pull
fi
set -ue

# Set a custom OS grain for Manjaro.
if grep Manjaro /etc/issue; then
    sudo bash -c "echo os: Arch > /etc/salt/grains"
fi

# Run salt.
# add "-l debug" to the salt-call command to produce verbose output
sudo bash -c "export HOME=${HOME}; salt-call --local --file-root=./salt --state-output=mixed -l info --force-color --out-file=/tmp/salt-call.log state.apply 2>&1"
grep --color=never -v stty /tmp/salt-call.log

# Exit with non-zero status if a failure occurred.
grep Failed /tmp/salt-call.log | sed -E "s/[[:space:]]+/ /g" | grep -q ": 0" || exit 1
